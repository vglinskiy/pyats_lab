---
- name: configure nxos1 switch for pyats lab
  gather_facts: no
  hosts: nxos1

  tasks:
    - name: verify ssh is up and running
      wait_for:
        port: 4822
        timeout: 10

    - name: enable feature ospf
      nxos_feature:
        feature: ospf
        state: enabled
      tags:
        - tested

    - name: enable feature bgp
      nxos_feature:
        feature: bgp
        state: enabled
      tags:
        - tested

    - name: enable interfaces
      nxos_interface:
        name: "{{ item.name }}"
        admin_state: up
        mode: layer3
      with_items: "{{ interfaces }}"
      when: "'Ethernet' in  item.name"
      tags:
        - tested

    - name: configure IP addresses on interfaces
      nxos_l3_interface:
        name: "{{ item.name }}"
        ipv4: "{{ item.ipv4 }}/{{ item.prefix_len }}"
        state: present
      with_items: "{{ interfaces }}"
      tags:
        - tested

    - name: enable router ospf
      nxos_ospf: 
       ospf: "{{ protocols.ospf.name }}"
       state: present
      tags:
        - tested

    - name: configure ospf interfaces
      nxos_interface_ospf:
        interface: "{{ item.name }}"
        ospf: "{{ protocols.ospf.name }}"
        area: 0.0.0.0
        network: point-to-point
        state: present
      with_items: "{{ interfaces }}"
      tags:
        - tested

    - name: configure static routes
      nxos_static_route:
        prefix: "{{ item.prefix }}"
        next_hop: "{{ item.next_hop }}"
      with_items: "{{ protocols.static }}"
      tags:
        - tested

    - name: configure prefix-list
      nxos_config:
        lines:
          - ip prefix-list STATIC permit {{ item.prefix }}
      with_items: "{{ protocols.static }}"
      ignore_errors: yes
      tags:
        - tested

    - name: configure route-map
      nxos_config:
        parents: route-map STATIC permit 10
        lines:
          - match ip address prefix-list STATIC
      tags:
        - tested

    - name: enable BGP router
      nxos_bgp:
         asn: "{{ protocols.bgp.asn }}"
         router_id: "{{ item.ipv4 }}"
      loop: "{{ lookup('list', interfaces) }}"
      when: "'loopback' in item.name"
      tags:
        - tested

    - nxos_bgp_af:
         asn: "{{ protocols.bgp.asn }}"
         afi: ipv4
         safi: unicast
         redistribute: [['static', 'STATIC']]
         vrf: default
          
    - nxos_bgp_neighbor:
         asn: "{{ protocols.bgp.asn }}"
         neighbor: "{{ item.ipv4 }}"
         remote_as: "{{ item.asn }}"
         update_source: "{{ item.update_source|default(omit) }}"
         state: present
      with_items: "{{ protocols.bgp.neighbors }}"


    - name: save configuration
      nxos_config:
         save_when: always
